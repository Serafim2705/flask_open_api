# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PositionInOrder(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pizza_id: object=None, quantity: int=None, price: float=None, discount: float=None):  # noqa: E501
        """PositionInOrder - a model defined in Swagger

        :param pizza_id: The pizza_id of this PositionInOrder.  # noqa: E501
        :type pizza_id: object
        :param quantity: The quantity of this PositionInOrder.  # noqa: E501
        :type quantity: int
        :param price: The price of this PositionInOrder.  # noqa: E501
        :type price: float
        :param discount: The discount of this PositionInOrder.  # noqa: E501
        :type discount: float
        """
        self.swagger_types = {
            'pizza_id': object,
            'quantity': int,
            'price': float,
            'discount': float
        }

        self.attribute_map = {
            'pizza_id': 'PizzaId',
            'quantity': 'quantity',
            'price': 'Price',
            'discount': 'Discount'
        }
        self._pizza_id = pizza_id
        self._quantity = quantity
        self._price = price
        self._discount = discount

    @classmethod
    def from_dict(cls, dikt) -> 'PositionInOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PositionInOrder of this PositionInOrder.  # noqa: E501
        :rtype: PositionInOrder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pizza_id(self) -> object:
        """Gets the pizza_id of this PositionInOrder.


        :return: The pizza_id of this PositionInOrder.
        :rtype: object
        """
        return self._pizza_id

    @pizza_id.setter
    def pizza_id(self, pizza_id: object):
        """Sets the pizza_id of this PositionInOrder.


        :param pizza_id: The pizza_id of this PositionInOrder.
        :type pizza_id: object
        """

        self._pizza_id = pizza_id

    @property
    def quantity(self) -> int:
        """Gets the quantity of this PositionInOrder.


        :return: The quantity of this PositionInOrder.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this PositionInOrder.


        :param quantity: The quantity of this PositionInOrder.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def price(self) -> float:
        """Gets the price of this PositionInOrder.


        :return: The price of this PositionInOrder.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this PositionInOrder.


        :param price: The price of this PositionInOrder.
        :type price: float
        """

        self._price = price

    @property
    def discount(self) -> float:
        """Gets the discount of this PositionInOrder.


        :return: The discount of this PositionInOrder.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount: float):
        """Sets the discount of this PositionInOrder.


        :param discount: The discount of this PositionInOrder.
        :type discount: float
        """

        self._discount = discount
